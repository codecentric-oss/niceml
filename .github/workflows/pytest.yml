name: 🧪 Pytest

on:
  push:
  pull_request:
    types: [ opened, reopened ]
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
    secrets:
      token:
        required: true
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10"]
        os: [ ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3
      - name: 🐍Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: 🔨 Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.4.0"
      - name: 🔨Install dependencies
        run: poetry install --no-interaction --with dev --no-ansi
      - name: 🧪 Run tests [unit]
        run: |
          poetry run pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}-${{matrix.os}}.xml tests/unit
      - name: 🧪 Run tests [configs]
        run: |
          poetry run pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}-${{matrix.os}}.xml tests/configs
      - name: 🧪 Run tests [e2e]
        run: |
          poetry run pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}-${{matrix.os}}.xml tests/e2e
      - name: ⬆️ Upload pytest test results
        uses: actions/upload-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-results-${{ matrix.python-version }}-${{matrix.os}}
          path: junit/test-results-${{ matrix.python-version }}-${{matrix.os}}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
